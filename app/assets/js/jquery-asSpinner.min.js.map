{"version":3,"sources":["jquery-asSpinner.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsSpinnerEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","skin","disabled","min","max","step","name","precision","rule","looping","mousewheel","format","value","parse","parseFloat","RULES","defaults","currency","quantity","percent","month","day","hour","minute","second","asSpinner","element","options","$element","extend","data","that","array","each","prop","val","event","special","eventBinded","spinTimeout","isFocused","classes","focus","control","down","up","wrap","_trigger","init","$control","$wrap","parent","$down","find","$up","addClass","appendTo","bindEvent","disable","eventType","_len","arguments","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","apply","fn","timeout","spinFn","clearTimeout","setTimeout","call","on","removeClass","document","one","spin","spinDown","off","spinUp","e","keyCode","which","applyValue","delta","unmousewheel","isNumeric","set","isNaN","valid","isOutOfBounds","Number","toFixed","_set","forEach","get","unbindEvent"],"mappings":"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","file":"jquery-asSpinner.min.js","sourcesContent":["/**\n* jQuery asSpinner v0.4.3\n* https://github.com/amazingSurge/jquery-asSpinner\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asSpinner',\n  skin: null,\n\n  disabled: false,\n  min: -10,\n  max: 10,\n  step: 1,\n  name: null,\n  precision: 0,\n  rule: null, //string, shortcut define max min step precision\n\n  looping: true, // if cycling the value when it is outofbound\n  mousewheel: false, // support mouse wheel\n\n  format(value) { // function, define custom format\n    return value;\n  },\n  parse(value) { // function, parse custom format value\n    return parseFloat(value);\n  }\n};\n\nvar RULES = {\n  defaults: {\n    min: null,\n    max: null,\n    step: 1,\n    precision: 0\n  },\n  currency: {\n    min: 0.00,\n    max: 99999,\n    step: 0.01,\n    precision: 2\n  },\n  quantity: {\n    min: 1,\n    max: 999,\n    step: 1,\n    precision: 0\n  },\n  percent: {\n    min: 1,\n    max: 100,\n    step: 1,\n    precision: 0\n  },\n  month: {\n    min: 1,\n    max: 12,\n    step: 1,\n    precision: 0\n  },\n  day: {\n    min: 1,\n    max: 31,\n    step: 1,\n    precision: 0\n  },\n  hour: {\n    min: 0,\n    max: 23,\n    step: 1,\n    precision: 0\n  },\n  minute: {\n    min: 1,\n    max: 59,\n    step: 1,\n    precision: 0\n  },\n  second: {\n    min: 1,\n    max: 59,\n    step: 1,\n    precision: 0\n  }\n};\n\nconst NAMESPACE$1 = 'asSpinner';\n\nclass asSpinner {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $(element);\n\n    this.options = $.extend({}, DEFAULTS, options, this.$element.data());\n    this.namespace = this.options.namespace;\n\n    if (this.options.rule) {\n      const that = this;\n      const array = ['min', 'max', 'step', 'precision'];\n      $.each(array, (key, value) => {\n        that[value] = RULES[that.options.rule][value];\n      });\n    } else {\n      this.min = this.options.min;\n      this.max = this.options.max;\n      this.step = this.options.step;\n      this.precision = this.options.precision;\n    }\n\n    this.disabled = this.options.disabled;\n    if (this.$element.prop('disabled')) {\n      this.disabled = true;\n    }\n\n    this.value = this.options.parse(this.$element.val());\n\n    this.mousewheel = this.options.mousewheel;\n    if (this.mousewheel && !$.event.special.mousewheel) {\n      this.mousewheel = false;\n    }\n\n    this.eventBinded = false;\n    this.spinTimeout = null;\n    this.isFocused = false;\n\n    this.classes = {\n      disabled: `${this.namespace}_disabled`,\n      skin: `${this.namespace}_${this.options.skin}`,\n      focus: `${this.namespace}_focus`,\n\n      control: `${this.namespace}-control`,\n      down: `${this.namespace}-down`,\n      up: `${this.namespace}-up`,\n      wrap: this.namespace\n    };\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    this.$control = $(`<div class=\"${this.namespace}-control\"><span class=\"${this.classes.up}\"></span><span class=\"${this.classes.down}\"></span></div>`);\n    this.$wrap = this.$element.wrap(`<div tabindex=\"0\" class=\"${this.classes.wrap}\"></div>`).parent();\n    this.$down = this.$control.find(`.${this.classes.down}`);\n    this.$up = this.$control.find(`.${this.classes.up}`);\n\n    if (this.options.skin) {\n      this.$wrap.addClass(this.classes.skin);\n    }\n\n    this.$control.appendTo(this.$wrap);\n\n    if (this.disabled === false) {\n      // attach event\n      this.bindEvent();\n    } else {\n      this.disable();\n    }\n\n    // inital\n    this._trigger('ready');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  // 500ms to detect if it is a click event\n  // 60ms interval execute if it if long pressdown\n  spin(fn, timeout) {\n    const that = this;\n    const spinFn = timeout => {\n      clearTimeout(that.spinTimeout);\n      that.spinTimeout = setTimeout(() => {\n        fn.call(that);\n        spinFn(60);\n      }, timeout);\n    };\n    spinFn(timeout || 500);\n  }\n\n  bindEvent() {\n    const that = this;\n    this.eventBinded = true;\n\n    this.$wrap.on('focus.asSpinner', () => {\n      that.$wrap.addClass(that.classes.focus);\n    }).on('blur.asSpinner', () => {\n      if (!that.isFocused) {\n        that.$wrap.removeClass(that.classes.focus);\n      }\n    });\n\n    this.$down.on('mousedown.asSpinner', () => {\n      $(document).one('mouseup.asSpinner', () => {\n        clearTimeout(that.spinTimeout);\n      });\n      that.spin(that.spinDown);\n    }).on('mouseup.asSpinner', () => {\n      clearTimeout(that.spinTimeout);\n      $(document).off('mouseup.asSpinner');\n    }).on('click.asSpinner', () => {\n      that.spinDown();\n\n    });\n\n    this.$up.on('mousedown.asSpinner', () => {\n      $(document).one('mouseup.asSpinner', () => {\n        clearTimeout(that.spinTimeout);\n      });\n      that.spin(that.spinUp);\n    }).on('mouseup.asSpinner', () => {\n      clearTimeout(that.spinTimeout);\n      $(document).off('mouseup.asSpinner');\n    }).on('click.asSpinner', () => {\n      that.spinUp();\n    });\n\n    this.$element.on('focus.asSpinner', function() {\n      that.isFocused = true;\n      that.$wrap.addClass(that.classes.focus);\n\n      // keyboard support\n      $(this).on('keydown.asSpinner', e => {\n        /*eslint consistent-return: \"off\"*/\n        const key = e.keyCode || e.which;\n        if (key === 38) {\n          that.applyValue();\n          that.spinUp();\n          return false;\n        }\n        if (key === 40) {\n          that.applyValue();\n          that.spinDown();\n          return false;\n        }\n        if (key <= 57 && key >= 48) {\n          setTimeout(() => {\n            //that.set(parseFloat(it.value));\n          }, 0);\n        }\n      });\n\n      // mousewheel support\n      if (that.mousewheel === true) {\n        $(this).mousewheel((event, delta) => {\n          if (delta > 0) {\n            that.spinUp();\n          } else {\n            that.spinDown();\n          }\n          return false;\n        });\n      }\n    }).on('blur.asSpinner', function() {\n      that.isFocused = false;\n      that.$wrap.removeClass(that.classes.focus);\n      $(this).off('keydown.asSpinner');\n      if (that.mousewheel === true) {\n        $(this).unmousewheel();\n      }\n      that.applyValue();\n    });\n  }\n\n  unbindEvent() {\n    this.eventBinded = false;\n    this.$element.off('.asSpinner');\n    this.$down.off('.asSpinner');\n    this.$up.off('.asSpinner');\n    this.$wrap.off('.asSpinner');\n  }\n\n  isNumber(value) {\n    if (typeof value === 'number' && $.isNumeric(value)) {\n      return true;\n    }\n    return false;\n  }\n\n  isOutOfBounds(value) {\n    if (value < this.min) {\n      return -1;\n    }\n    if (value > this.max) {\n      return 1;\n    }\n    return 0;\n  }\n\n  applyValue() {\n    if (this.options.format(this.value) !== this.$element.val()) {\n      this.set(this.options.parse(this.$element.val()));\n    }\n  }\n\n  _set(value) {\n    if (isNaN(value)) {\n      value = this.min;\n    }\n    const valid = this.isOutOfBounds(value);\n    if (valid !== 0) {\n      if (this.options.looping === true) {\n        value = (valid === 1) ? this.min : this.max;\n      } else {\n        value = (valid === -1) ? this.min : this.max;\n      }\n    }\n    this.value = value = Number(value).toFixed(this.precision);\n\n    this.$element.val(this.options.format(this.value));\n  }\n\n  set(value) {\n    this._set(value);\n\n    this._trigger('change', this.value);\n  }\n\n  get() {\n    return this.value;\n  }\n\n  /* Public methods */\n  update(obj) {\n    const that = this;\n\n    ['min', 'max', 'precision', 'step'].forEach(value => {\n      if (obj[value]) {\n        that[value] = obj[value];\n      }\n    });\n    if (obj.value) {\n      this.set(obj.value);\n    }\n    return this;\n  }\n\n  val(value) {\n    if (value) {\n      this.set(this.options.parse(value));\n    } else {\n      return this.get();\n    }\n  }\n\n  spinDown() {\n    if (!$.isNumeric(this.value)) {\n      this.value = 0;\n    }\n    this.value = parseFloat(this.value) - parseFloat(this.step);\n    this.set(this.value);\n\n    return this;\n  }\n\n  spinUp() {\n    if (!$.isNumeric(this.value)) {\n      this.value = 0;\n    }\n    this.value = parseFloat(this.value) + parseFloat(this.step);\n    this.set(this.value);\n\n    return this;\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$wrap.removeClass(this.classes.disabled);\n    this.$element.prop('disabled', false);\n\n    if (this.eventBinded === false) {\n      this.bindEvent();\n    }\n\n    this._trigger('enable');\n\n    return this;\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$element.prop('disabled', true);\n\n    this.$wrap.addClass(this.classes.disabled);\n    this.unbindEvent();\n\n    this._trigger('disable');\n\n    return this;\n  }\n\n  destroy() {\n    this.unbindEvent();\n    this.$control.remove();\n    this.$element.unwrap();\n\n    this._trigger('destroy');\n    return this;\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.4.3'\n};\n\nconst NAMESPACE = 'asSpinner';\nconst OtherAsSpinner = $.fn.asSpinner;\n\nconst jQueryAsSpinner = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)$/.test(method)) || (method === 'val' && args.length === 0)) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asSpinner(this, options));\n    }\n  });\n};\n\n$.fn.asSpinner = jQueryAsSpinner;\n\n$.asSpinner = $.extend({\n  setDefaults: asSpinner.setDefaults,\n  noConflict: function() {\n    $.fn.asSpinner = OtherAsSpinner;\n    return jQueryAsSpinner;\n  }\n}, info);\n"]}